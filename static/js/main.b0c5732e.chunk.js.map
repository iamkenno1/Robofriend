{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/Searchbox.js","Components/Scroll.js","containers/App.js","Components/errorBoundry.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","robots","map","user","i","Searchbox","seachfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","Component","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","filterrobots","this","filter","robot","toLowerCase","includes","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZH,SAACC,GACT,OACI,sBAAKC,UAAW,6CAAhB,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,GAAhC,cACjB,gCACI,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCefC,EApBC,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACd,OACK,8BAEOA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIP,GAAII,EAAOG,GAAGP,GACdC,KAAMG,EAAOG,GAAGN,KAChBC,MAAQE,EAAOG,GAAGL,OAHbK,SCQlBC,EAhBG,SAAC,GAA+B,EAA9BC,WAA+B,IAAnBC,EAAkB,EAAlBA,aAC5B,OACI,qBAAKb,UAAU,OAAf,SACI,uBACIA,UAAU,mCACVc,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCIXI,EAVA,SAAClB,GACZ,OACA,qBAAKmB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAO,SAApE,SACKtB,EAAMuB,YCgDAC,GCpDYC,Y,wDDMvB,aAAc,IAAD,8BACT,gBAiBJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAjBzC,EAAKC,MAAQ,CACTxB,OAAQ,GACRqB,YAAY,IAJP,E,qDASb,WAAoB,IAAD,OACfI,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UAE7BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACpB,OAAQ6B,S,oBAY1C,WAAS,IAAD,OACEC,EAAeC,KAAKP,MAAMxB,OAAOgC,QAAO,SAAAC,GAC1C,OAAOA,EAAMpC,KAAKqC,cAAcC,SAAS,EAAKX,MAAMH,YAAYa,kBAIpE,OACI,sBAAKzC,UAAU,KAAf,UACI,4CACA,cAAC,EAAD,CAAWa,aAAcyB,KAAKb,iBAC9B,cAAC,EAAD,UACI,uCACI,cAAC,EAAD,CAAUlB,OAAQ8B,e,GAtCxBM,IAAMnB,YEKToB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b0c5732e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card =(props) => {\r\n    return(\r\n        <div className= 'bg-light-green dib br3 ma2 grow bw2 shadow'>\r\n            <img alt='robots' src={`https://robohash.org/${props.id}?200x200`} />\r\n                <div>\r\n                    <h2>{props.name}</h2>\r\n                    <p>{props.email}</p>\r\n                </div>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList =({robots}) => {\r\n    return(\r\n         <div>\r\n            {\r\n                robots.map((user, i ) => {\r\n                    return(\r\n                        <Card \r\n                            key={i} \r\n                            id={robots[i].id} \r\n                            name={robots[i].name} \r\n                            email= {robots[i].email}\r\n                        />\r\n                    )    \r\n                })\r\n            }   \r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default CardList; ","import React from 'react';\r\n\r\nconst Searchbox = ({seachfield, searchChange}) => {\r\n    return (\r\n        <div className='pa2 '>\r\n            <input \r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search' \r\n                placeholder='search robots' \r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n        \r\n    )\r\n        \r\n\r\n}\r\n\r\nexport default Searchbox;","import React from 'react';\r\n\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n    <div style={{overflowY: 'scroll', border: '1px solid black', height:'500px'}}>\r\n        {props.children}\r\n    </div>\r\n    \r\n    \r\n    )\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport Searchbox from '../Components/Searchbox';\r\nimport Scroll from '../Components/Scroll';\r\nimport errorBoundry from '../Components/errorBoundry';\r\nimport './App.css';\r\n\r\nclass App extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield:''\r\n        }\r\n    }\r\n    \r\n    \r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response=> response.json())\r\n\r\n        .then(users => this.setState({robots: users}))\r\n        \r\n    }\r\n    \r\n    \r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n        \r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        const filterrobots = this.state.robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());            \r\n        })\r\n        // console.log(filterrobots);\r\n        \r\n        return (\r\n            <div className='tc'>\r\n                <h1>RoboFriend</h1>\r\n                <Searchbox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <errorBoundry>\r\n                        <CardList robots={filterrobots} />\r\n                    </errorBoundry>\r\n                </Scroll>    \r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React, {Component} from 'react';\r\n\r\nclass errorBoundry extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>This is not good!!!???</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default errorBoundry; ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}